name: Build and deploy dagpenger-regel-ui

on:
  push:
    branches:
      - master
    paths-ignore:
      - redis/**
      - .github/workflows/deploy-redis.yaml
      - nais/redis.yaml
env:
  IMAGE: ghcr.io/${{ github.repository }}/dagpenger-regel-ui:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Package Repository
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Archive NAIS yaml
        uses: actions/upload-artifact@v2
        with:
          name: nais-yaml
          path: |
            nais
            !nais/redis.yaml

  deploy-preprod:
    name: Deploy to Preprod
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        name: Checkout code
      - uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/nais-dev.yaml
          VARS: nais/vars.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to Prod
    needs: [build, deploy-preprod]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        name: Checkout code
      - uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/nais-prod.yaml
          VARS: nais/vars.yaml
          PRINT_PAYLOAD: true
